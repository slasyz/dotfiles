# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 0
    inner.vertical =   0
    outer.left =       0
    outer.bottom =     0
    outer.top =        0
    outer.right =      0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    #     activate
    # end tell'
    # '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    alt-1 = 'workspace 1'
    alt-2 = 'workspace 2'
    alt-3 = 'workspace 3'
    alt-4 = 'workspace 4'
    alt-5 = 'workspace 5'
    alt-6 = 'workspace 6'
    alt-7 = 'workspace 7'
    alt-8 = 'workspace 8'
    alt-9 = 'workspace 9'
    alt-0 = 'workspace 0'
    alt-a = 'workspace A'
    alt-s = 'workspace S'
    alt-d = 'workspace D'
    alt-q = 'workspace Q'
    alt-w = 'workspace W'
    alt-e = 'workspace E'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
    alt-shift-2 = ['move-node-to-workspace 2', 'workspace 2']
    alt-shift-3 = ['move-node-to-workspace 3', 'workspace 3']
    alt-shift-4 = ['move-node-to-workspace 4', 'workspace 4']
    alt-shift-5 = ['move-node-to-workspace 5', 'workspace 5']
    alt-shift-6 = ['move-node-to-workspace 6', 'workspace 6']
    alt-shift-7 = ['move-node-to-workspace 7', 'workspace 7']
    alt-shift-8 = ['move-node-to-workspace 8', 'workspace 8']
    alt-shift-9 = ['move-node-to-workspace 9', 'workspace 9']
    alt-shift-0 = ['move-node-to-workspace 0', 'workspace 0']
    alt-shift-a = ['move-node-to-workspace A', 'workspace A']
    alt-shift-s = ['move-node-to-workspace S', 'workspace S']
    alt-shift-d = ['move-node-to-workspace D', 'workspace D']
    alt-shift-q = ['move-node-to-workspace Q', 'workspace Q']
    alt-shift-w = ['move-node-to-workspace W', 'workspace W']
    alt-shift-e = ['move-node-to-workspace E', 'workspace E']

    ctrl-left = 'workspace prev'
    ctrl-right = 'workspace next'

[workspace-to-monitor-force-assignment]
    #1 = 1                            # Monitor sequence number from left to right. 1-based indexing
    #2 = 'main'                       # Main monitor
    #3 = 'secondary'                  # Non-main monitor in case when there are only two monitors
    #4 = 'built-in'                   # Case insensitive regex substring
    #5 = '^built-in retina display$'  # Case insensitive regex match
    #6 = ['secondary', 'dell']        # You can specify multiple patterns.
                                     #   The first matching pattern will be used
    1 = 'built-in'
    2 = 'built-in'
    3 = 'built-in'
    4 = 'built-in'
    5 = 'built-in'
    6 = 'sidecar'
    7 = 'sidecar'
    8 = 'sidecar'
    9 = 'sidecar'
    0 = 'sidecar'
    Q = 'built-in'
    W = 'built-in'
    E = 'built-in'
    A = 'built-in'
    S = 'built-in'
    D = 'built-in'

[[on-window-detected]]
    check-further-callbacks = true
    run = 'layout floating'

[[on-window-detected]]
    if.app-id = 'company.thebrowser.Browser'
    check-further-callbacks = true
    run = ['move-node-to-workspace 1']
[[on-window-detected]]
    if.app-id = 'com.apple.Mail'
    check-further-callbacks = true
    run = ['move-node-to-workspace 1']
[[on-window-detected]]
    if.app-id = 'com.apple.Calendar'
    check-further-callbacks = true
    run = ['move-node-to-workspace 1']
[[on-window-detected]]
    if.app-id = 'com.todoist.mac.Todoist'
    check-further-callbacks = true
    run = ['move-node-to-workspace 1']

[[on-window-detected]]
    #if.app-id = 'com.apple.systempreferences'
    if.app-name-regex-substring = '(goland|sublime|cursor)'
    #if.window-title-regex-substring = 'substring'
    #if.workspace = 'workspace-name'
    #if.during-aerospace-startup = true
    check-further-callbacks = true
    run = ['move-node-to-workspace 2']

[[on-window-detected]]
    if.app-id = 'com.microsoft.VSCode'
    check-further-callbacks = true
    run = ['move-node-to-workspace 2']

[[on-window-detected]]
    if.app-name-regex-substring = 'telegram'
    check-further-callbacks = true
    run = ['move-node-to-workspace 3']
[[on-window-detected]]
    if.app-name-regex-substring = 'microsoft teams'
    check-further-callbacks = true
    run = ['move-node-to-workspace 3']
